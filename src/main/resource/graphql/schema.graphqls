scalar Date
scalar Time

schema {
    query: Query,
    mutation: Mutation
}

type Query{
    getAllUsers : [User]
    getUserById(userId : Int) : User
    getCalendar: [Calendar]
    getCalendarByUserId(userId: Int): [Calendar]
}

type Mutation{
    updateUserEmail(userId:Int, email:String) : User
    addUser(userInput: UserMutation) : User
    addSession(userId: Int, calendarInput : CalendarInput) : String
    cancelSession(userId: Int, calendarInput : CalendarInput) : String
}

type User {
    id : ID!
    username : String,
    password : String,
    email : String,
    role : String
}

type Calendar {
    id: ID!
    sessionDate: Date
    hours: [Hour]
}

type Hour {
    id: ID!
    sessionTime: Time
    users: [User]
    count: Int
}

input CalendarInput {
    sessionDate: String,
    sessionTime: String
}


input UserMutation {
    username : String,
    password : String,
    email : String
}


